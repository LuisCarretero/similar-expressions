# Optuna Hyperparameter Optimization Configuration - Mutation Weights Simplex
# Phase 2: Optimize mutation weights with fixed (optimal) neural backend settings

# Study settings
study:
  name: "sr_weights_optimization"
  direction: "maximize"
  storage: "sqlite:///sweeps/optuna_weights_study.db"

# Sampler configuration for noisy objectives
sampler:
  type: "TPESampler"
  n_startup_trials: 30  # More exploration for simplex space
  n_ei_candidates: 24   # More candidates to evaluate
  multivariate: true    # Important for simplex constraints

# Pruner configuration - conservative for noisy objectives
pruner:
  type: "MedianPruner"
  n_startup_trials: 15      # Don't prune early trials
  n_warmup_steps: 25        # Wait for 25 equations before pruning
  interval_steps: 10        # Only check every 10 equations

# Execution settings
execution:
  n_trials: 70                     # More trials for proper simplex exploration
  equations_per_batch: 10          # Report intermediate results every N equations

# Dataset and run configuration
dataset:
  name: "pysr-univariate"          # Dataset to use
  equation_indices: "0:100"        # Full equation set for final optimization
  num_samples: 2000                # Samples per equation
  noise: 0.0001                    # Relative noise magnitude
  n_runs: 5                        # Full runs for robust evaluation

# Base configuration file to use for non-optimized parameters
base_config: "run/config_neural.yaml"

# Hyperparameter search space - Mutation weights with proper Dirichlet sampling
hyperparameters:

  # Mutation weights - using Dirichlet distribution for proper simplex sampling
  mutation_weights:
    # The following weight names define the simplex dimensions
    # Dirichlet sampling will create uniform distribution over the simplex

    weight_add_node:
      type: "float"

    weight_insert_node:
      type: "float"

    weight_delete_node:
      type: "float"

    weight_do_nothing:
      type: "float"

    weight_mutate_constant:
      type: "float"

    weight_mutate_operator:
      type: "float"

    weight_swap_operands:
      type: "float"

    weight_rotate_tree:
      type: "float"

    weight_randomize:
      type: "float"

    weight_simplify:
      type: "float"

    weight_optimize:
      type: "float"

    weight_neural_mutate_tree:
      type: "float"
